From e2015942e90a021151a5751776f35830ba063be7 Mon Sep 17 00:00:00 2001
From: Heiner Kallweit <hkallweit1@gmail.com>
Date: Wed, 16 Oct 2024 22:06:53 +0200
Subject: [PATCH] r8169: replace custom flag with disable_work() et al

So far we use a custom flag to define when a task can be scheduled and
when not. Let's use the standard mechanism with disable_work() et al
instead.
Note that in rtl8169_close() we can remove the call to cancel_work()
because we now call disable_work_sync() in rtl8169_down() already.

Signed-off-by: Heiner Kallweit <hkallweit1@gmail.com>
Signed-off-by: Andrew Lunn <andrew@lunn.ch>
---
 drivers/net/ethernet/realtek/r8169_main.c | 18 ++++++------------
 1 file changed, 6 insertions(+), 12 deletions(-)

--- a/drivers/net/ethernet/realtek/r8169_main.c
+++ b/drivers/net/ethernet/realtek/r8169_main.c
<<<<<<< HEAD
@@ -619,7 +619,6 @@ struct rtl8169_tc_offsets {
=======
@@ -617,7 +617,6 @@ struct rtl8169_tc_offsets {
>>>>>>> 94392b39ec (稳定版本发布)
 };
 
 enum rtl_flag {
-	RTL_FLAG_TASK_ENABLED = 0,
 	RTL_FLAG_TASK_RESET_PENDING,
 	RTL_FLAG_TASK_RESET_NO_QUEUE_WAKE,
 	RTL_FLAG_TASK_TX_TIMEOUT,
<<<<<<< HEAD
@@ -2505,11 +2504,9 @@ u16 rtl8168h_2_get_adc_bias_ioffset(stru
=======
@@ -2502,11 +2501,9 @@ u16 rtl8168h_2_get_adc_bias_ioffset(stru
>>>>>>> 94392b39ec (稳定版本发布)
 
 static void rtl_schedule_task(struct rtl8169_private *tp, enum rtl_flag flag)
 {
-	if (!test_bit(RTL_FLAG_TASK_ENABLED, tp->wk.flags))
-		return;
-
 	set_bit(flag, tp->wk.flags);
-	schedule_work(&tp->wk.work);
+	if (!schedule_work(&tp->wk.work))
+		clear_bit(flag, tp->wk.flags);
 }
 
 static void rtl8169_init_phy(struct rtl8169_private *tp)
<<<<<<< HEAD
@@ -4836,9 +4833,6 @@ static void rtl_task(struct work_struct
=======
@@ -4827,9 +4824,6 @@ static void rtl_task(struct work_struct
>>>>>>> 94392b39ec (稳定版本发布)
 		container_of(work, struct rtl8169_private, wk.work);
 	int ret;
 
-	if (!test_bit(RTL_FLAG_TASK_ENABLED, tp->wk.flags))
-		return;
-
 	if (test_and_clear_bit(RTL_FLAG_TASK_TX_TIMEOUT, tp->wk.flags)) {
 		/* if chip isn't accessible, reset bus to revive it */
 		if (RTL_R32(tp, TxConfig) == ~0) {
<<<<<<< HEAD
@@ -4922,6 +4916,7 @@ static int r8169_phy_connect(struct rtl8
=======
@@ -4913,6 +4907,7 @@ static int r8169_phy_connect(struct rtl8
>>>>>>> 94392b39ec (稳定版本发布)
 
 static void rtl8169_down(struct rtl8169_private *tp)
 {
+	disable_work_sync(&tp->wk.work);
 	/* Clear all task flags */
 	bitmap_zero(tp->wk.flags, RTL_FLAG_MAX);
 
<<<<<<< HEAD
@@ -4950,7 +4945,7 @@ static void rtl8169_up(struct rtl8169_pr
=======
@@ -4941,7 +4936,7 @@ static void rtl8169_up(struct rtl8169_pr
>>>>>>> 94392b39ec (稳定版本发布)
 	phy_resume(tp->phydev);
 	rtl8169_init_phy(tp);
 	napi_enable(&tp->napi);
-	set_bit(RTL_FLAG_TASK_ENABLED, tp->wk.flags);
+	enable_work(&tp->wk.work);
 	rtl_reset_work(tp);
 
 	phy_start(tp->phydev);
<<<<<<< HEAD
@@ -4967,8 +4962,6 @@ static int rtl8169_close(struct net_devi
=======
@@ -4958,8 +4953,6 @@ static int rtl8169_close(struct net_devi
>>>>>>> 94392b39ec (稳定版本发布)
 	rtl8169_down(tp);
 	rtl8169_rx_clear(tp);
 
-	cancel_work(&tp->wk.work);
-
 	free_irq(tp->irq, tp);
 
 	phy_disconnect(tp->phydev);
<<<<<<< HEAD
@@ -5201,7 +5194,7 @@ static void rtl_remove_one(struct pci_de
=======
@@ -5192,7 +5185,7 @@ static void rtl_remove_one(struct pci_de
>>>>>>> 94392b39ec (稳定版本发布)
 	if (pci_dev_run_wake(pdev))
 		pm_runtime_get_noresume(&pdev->dev);
 
-	cancel_work_sync(&tp->wk.work);
+	disable_work_sync(&tp->wk.work);
 
 	if (IS_ENABLED(CONFIG_R8169_LEDS))
 		r8169_remove_leds(tp->leds);
<<<<<<< HEAD
@@ -5579,6 +5572,7 @@ static int rtl_init_one(struct pci_dev *
=======
@@ -5570,6 +5563,7 @@ static int rtl_init_one(struct pci_dev *
>>>>>>> 94392b39ec (稳定版本发布)
 	tp->irq = pci_irq_vector(pdev, 0);
 
 	INIT_WORK(&tp->wk.work, rtl_task);
+	disable_work(&tp->wk.work);
 
 	rtl_init_mac_address(tp);
 
